//
// Check/radio
//
.form-check {
  //display: block;
  min-height: var(--form-check-min-height);
  padding-left: var(--form-check-padding-start);
  margin-bottom: var(--form-check-margin-bottom);
  cursor: pointer;
  //
  display: flex;
  align-items: center;
  gap: 12px;

  .form-check-input {
    float: left;
    margin-left: calc(var(--form-check-padding-start) * -1);
  }
}

.form-check-input {
  --form-check-bg: var(--form-check-input-bg);

  flex-shrink: 0;
  width: var(--form-check-input-width);
  height: var(--form-check-input-width);
  margin-top: var(--form-check-margin-top);
  vertical-align: top;
  appearance: none;
  background-color: var(--form-check-bg);
  background-image: var(--form-check-bg-image);
  background-repeat: no-repeat;
  background-position: center;
  //background-size: contain;
  background-size: 12px; //TODO
  border: var(--form-check-input-border-width) solid var(--form-check-input-border-color);
  print-color-adjust: exact; // Keep themed appearance for print
  transition: var(--form-check-transition);
  cursor: pointer;

  &[type="checkbox"] {
    border-radius: var(--form-check-checkbox-border-radius);
  }

  &[type="radio"] {
    // stylelint-disable-next-line property-disallowed-list
    border-radius: var(--form-check-radio-border-radius);
  }

  &:hover {
    border-color: var(--form-check-input-focus-border-color);
  }

  &:focus {
    border-color: var(--form-check-input-focus-border-color);
    outline: 0;
    box-shadow: var(--form-check-input-focus-box-shadow);
  }

  &:active {
    //filter: $form-check-input-active-filter;
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: var(--form-check-input-disabled-opacity);
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .form-check-label {
      cursor: default;
      opacity: var(--form-check-label-disabled-opacity);
    }
  }

  &:checked {
    background-color: var(--form-check-input-checked-bg-color);
    border-color: var(--form-check-input-checked-border-color);

    &[type="checkbox"] {
      --form-check-bg-image: #{escape-svg($form-check-checkbox-checked-bg-image)};
    }

    &[type="radio"] {
      --form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image)};
    }
  }

  //TODO
  //&[type="checkbox"]:indeterminate {
  //  background-color: $form-check-input-indeterminate-bg-color;
  //  border-color: $form-check-input-indeterminate-border-color;
  //
  //  @if $enable-gradients {
  //    --form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)}, var(--gradient);
  //  } @else {
  //    --form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)};
  //  }
  //}
}

.form-check-label {
  color: var(--form-check-label-color);
  font-size: 1rem;
  line-height: var(--form-check-line-height);
  cursor: var(--form-check-label-cursor);
  transition: color .3s cubic-bezier(0.52, 0.24, 0.33, 1);

  &:hover,
  .form-check:hover & {
    color: var(--form-check-label-hover-color);
  }

  .form-check-input:checked + & {
    color: var(--form-check-label-hover-color);
  }
}

.form-check-inline {
  display: inline-block;
  margin-right: var(--form-check-inline-margin-end);
}

.btn-check {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;

  &[disabled],
  &:disabled {
    + .btn {
      pointer-events: none;
      filter: none;
      //opacity: $form-check-btn-check-disabled-opacity; // TODO
    }
  }
}
